#!/bin/bash

GREEN='\033[1;32m'
BLUE='\033[1;34m'
RED='\033[1;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Error: Not a git repository${NC}"
    echo -e "${YELLOW}üí° Run this command inside a git repository${NC}"
    exit 1
fi

generate_commit_message() {
    ADDED_FILES=$(git diff --cached --name-only --diff-filter=A | sed 's/^/\t/g')
    MODIFIED_FILES=$(git diff --cached --name-only --diff-filter=M | sed 's/^/\t/g')
    DELETED_FILES=$(git diff --cached --name-only --diff-filter=D | sed 's/^/\t/g')
    RENAMED_FILES=$(git diff --cached --name-only --diff-filter=R | sed 's/^/\t/g')

    CHANGES_SUMMARY=$(git diff HEAD | sed 's/^/\t/g')

    if [ ! -f "/home/maty/Scripts/src/prompt.txt" ]; then
        echo -e "${RED}‚ùå Error: prompt.txt file not found.${NC}"
        exit 1
    fi
    STATIC_PROMPT=$(</home/maty/Scripts/src/prompt.txt)

    PROMPT="$STATIC_PROMPT\n\n$CHANGES_SUMMARY"

    echo -e "${BLUE}ü§ñ Asking AI to summarize changes...${NC}"
    OLLAMA_SUMMARY=$(ollama run qwen2.5-coder:1.5b "$PROMPT")

    if [ -z "$OLLAMA_SUMMARY" ]; then
        echo -e "${RED}‚ùå Ollama did not generate a summary. Exiting.${NC}"
        exit 1
    fi

    ADDED_COUNT=$([ -n "$ADDED_FILES" ] && echo "$ADDED_FILES" | grep -c '^' || echo 0)
    MODIFIED_COUNT=$([ -n "$MODIFIED_FILES" ] && echo "$MODIFIED_FILES" | grep -c '^' || echo 0)
    DELETED_COUNT=$([ -n "$DELETED_FILES" ] && echo "$DELETED_FILES" | grep -c '^' || echo 0)
    RENAMED_COUNT=$([ -n "$RENAMED_FILES" ] && echo "$RENAMED_FILES" | grep -c '^' || echo 0)

    if [ -n "$1" ]; then
        echo "$1" > commit_msg.txt
    else
        echo "$OLLAMA_SUMMARY" > commit_msg.txt
        echo -e "\nDetailed changes:" >> commit_msg.txt
        [[ $ADDED_COUNT -gt 0 ]] && echo -e "\nAdded ($ADDED_COUNT):\n$ADDED_FILES" >> commit_msg.txt
        [[ $MODIFIED_COUNT -gt 0 ]] && echo -e "\nModified ($MODIFIED_COUNT):\n$MODIFIED_FILES" >> commit_msg.txt
        [[ $DELETED_COUNT -gt 0 ]] && echo -e "\nDeleted ($DELETED_COUNT):\n$DELETED_FILES" >> commit_msg.txt
        [[ $RENAMED_COUNT -gt 0 ]] && echo -e "\nRenamed ($RENAMED_COUNT):\n$RENAMED_FILES" >> commit_msg.txt
    fi

    echo -e "${YELLOW}üìã Commit Message:${NC}"
    cat commit_msg.txt

    echo -e "${YELLOW}Accept? (Y/n):${NC}"
    read -r response
    if [[ ! "$response" =~ ^[Yy]?$ ]]; then
        echo -e "${BLUE}üîÑ Regenerating commit message...${NC}"
        generate_commit_message
    fi

    git commit -F commit_msg.txt > /dev/null 2>&1
    rm commit_msg.txt

    CURRENT_BRANCH=$(git branch --show-current)
    echo -e "${BLUE}üöÄ Pushing to ${YELLOW}$CURRENT_BRANCH${BLUE}...${NC}"
    if git push origin "$CURRENT_BRANCH" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Successfully pushed to $CURRENT_BRANCH${NC}"
    else
        echo -e "${RED}‚ùå Failed to push to $CURRENT_BRANCH${NC}"
        echo -e "${YELLOW}üí° Try running: git push origin $CURRENT_BRANCH manually${NC}"
    fi
}

git add .

if git status --porcelain | grep -q '^.*$'; then
    generate_commit_message "$1"
else
    echo -e "${RED}‚ùå No changes to commit${NC}"
    echo -e "${YELLOW}üí° Make some changes first${NC}"
    exit 1
fi
